#include <stdio.h>
#include <stdlib.h>
struct No{
    int info;
    struct No *esq;
	struct No *dir;
};
typedef struct No* ArvBin;//NovoTipoDeDado ArvBin

//-------CriandoArvore---------
ArvBin* Cria_ArvBin(){
	ArvBin* raiz = (ArvBin*) malloc (sizeof(ArvBin));
	if(raiz!=NULL){//se deu certo a alocação
		*raiz = NULL;
	return raiz;
	}
}
//--------insere-------
int insere_ArvBin(ArvBin* raiz,int valor){
    struct No* novo;
    novo = (struct No*) malloc (sizeof(struct No));
    novo->info = valor;
    novo->dir = NULL;
    novo->esq = NULL;
    return novo;
}
//----------imprime-----
int Imprime_ArvBin(){
	ArvBin raiz;
	printf("Valor:%d\n",raiz->info);
	Imprime_ArvBin(raiz->esq);
	Imprime_ArvBin(raiz->dir);
}

int main(){
	ArvBin* raiz;
	raiz = Cria_ArvBin();
		
	insere_ArvBin(raiz,7);
	Imprime_ArvBin();
	
}
//removearvore
/*int Remove_ArvBin(ArvBin *raiz, int valor){
    if(raiz == NULL){
      return 0;}
    struct No* ant = NULL;
    struct No* atual = *raiz;
    while(atual != NULL){
        if(valor == atual->info){
        if(atual == *raiz)
           *raiz = remove_atual(atual);
            else{
            if(ant->dir == atual)
               ant->dir = remove_atual(atual);
               else
               ant->esq = remove_atual(atual);
             }
        return 1;
        }
        ant = atual;
        if (valor > atual->info)
            atual = atual->dir;
            else
            atual = atual->esq;
       }
}
//preordem
void PreOrdem_ArvBin(ArvBin *raiz){
    if(raiz == NULL){
      return;
    }
    if(*raiz != NULL){
      printf("%d\n",(*raiz)->info);
      PreOrdem_ArvBin(&((*raiz)->esq));
      PreOrdem_ArvBin(&((*raiz)->dir));
    }
}
//emordem
void EmOrdem_ArvBin(ArvBin *raiz){
  if(raiz == NULL){
    return;
  }
  if(*raiz != NULL){
    EmOrdem_ArvBin(&((*raiz)->esq));
    printf("%d\n",(*raiz)->info);
    EmOrdem_ArvBin(&((*raiz)->dir));
  }
}
//posordem
void PosOrdem_ArvBin(ArvBin *raiz){
  if(raiz == NULL){
    return;
  }
  if(*raiz != NULL){
    PosOrdem_ArvBin(&((*raiz)->esq));
    PosOrdem_ArvBin(&((*raiz)->dir));
    printf("%d\n",(*raiz)->info);
  }
}*/
