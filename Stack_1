#include <stdio.h>
#include <stdlib.h>
#define MAX 21

typedef struct stack{
int pilha[MAX];
int topo;
}*Pilha;

Pilha Cria_Pilha(void){
Pilha Ptp;
Ptp = (Pilha) malloc (sizeof(struct stack));
if (Ptp!=NULL){
Ptp->topo = -1;
return Ptp;
}	
};

int E_cheia(Pilha Ptp){
if(Ptp->topo == MAX-1){
return 1;
}else{
return 0;
}
};

int E_vazia(Pilha Ptp){
if(Ptp->topo == -1){
printf("\n----\n");
return 1;
}else{
return 0;
}
};

int Push(Pilha Ptp, int elem){
if ((Ptp)->topo == MAX-1){
return 0;
}
(Ptp)->topo++;
(Ptp)->pilha[(Ptp)->topo] = elem;
return 1;
}

int pop(Pilha p){
int aux; 
aux = p->pilha[(p->topo)--];
return aux;
}

int mostra (Pilha p){
int aux;
if (E_vazia(p)){
return 1;
}else{
aux = pop(p);
printf ("%d\n",aux);
mostra(p);
return 0;
}
}

int menu(void){
int opt;
printf("\n\nEscolha a opcao para stack:\n\n");
printf("1. Adicionar\n\n");
printf("2. Pop\n\n");
printf("3. Mostrar\n\n");
printf("4. Sair\n\n");
printf("Opcao: ");
scanf("%d",&opt);
return opt;
}

void opcao(Pilha PILHA, int op){
Pilha tmp;
int vetor[10];
switch(op){
case 1:
for(int s=1;s<11;s++){
printf("Digite %d valor para a stack:",s);
scanf("%d",&vetor[s]);
Push(PILHA,vetor[s]);	
}
break;
case 2:
if(E_vazia(PILHA)){
return;
}else{
printf("\n removido topo");
pop(PILHA);
}
break;
case 3:
if(E_vazia(PILHA)){
return;
}else{
printf("\nStack:\n");
mostra(PILHA);
printf ("---fim da pilha---");
}
break;
case 4:
printf("saindo");
exit(0);
break;
default:
printf("Comando invalido\n");
}
}

int main() {
Pilha Ptp;
Ptp = Cria_Pilha();
int opt;
do{
opt=menu();
opcao(Ptp,opt);
}while(opt);
free(Ptp);
return 0;
}	
